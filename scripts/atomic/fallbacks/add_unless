cat << EOF
/**
<<<<<<< HEAD
<<<<<<< HEAD
 * arch_${atomic}_add_unless - add unless the number is already a given value
=======
 * ${arch}${atomic}_add_unless - add unless the number is already a given value
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554
=======
 * arch_${atomic}_add_unless - add unless the number is already a given value
>>>>>>> a8fa06cfb065a2e9663fe7ce32162762b5fcef5b
 * @v: pointer of type ${atomic}_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, if @v was not already @u.
 * Returns true if the addition was done.
 */
static __always_inline bool
<<<<<<< HEAD
<<<<<<< HEAD
arch_${atomic}_add_unless(${atomic}_t *v, ${int} a, ${int} u)
{
	return arch_${atomic}_fetch_add_unless(v, a, u) != u;
=======
${arch}${atomic}_add_unless(${atomic}_t *v, ${int} a, ${int} u)
{
	return ${arch}${atomic}_fetch_add_unless(v, a, u) != u;
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554
=======
arch_${atomic}_add_unless(${atomic}_t *v, ${int} a, ${int} u)
{
	return arch_${atomic}_fetch_add_unless(v, a, u) != u;
>>>>>>> a8fa06cfb065a2e9663fe7ce32162762b5fcef5b
}
EOF
