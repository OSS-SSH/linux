cat <<EOF
/**
<<<<<<< HEAD
<<<<<<< HEAD
 * arch_${atomic}_add_negative - add and test if negative
=======
 * ${arch}${atomic}_add_negative - add and test if negative
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554
=======
 * arch_${atomic}_add_negative - add and test if negative
>>>>>>> a8fa06cfb065a2e9663fe7ce32162762b5fcef5b
 * @i: integer value to add
 * @v: pointer of type ${atomic}_t
 *
 * Atomically adds @i to @v and returns true
 * if the result is negative, or false when
 * result is greater than or equal to zero.
 */
static __always_inline bool
<<<<<<< HEAD
<<<<<<< HEAD
arch_${atomic}_add_negative(${int} i, ${atomic}_t *v)
{
	return arch_${atomic}_add_return(i, v) < 0;
=======
${arch}${atomic}_add_negative(${int} i, ${atomic}_t *v)
{
	return ${arch}${atomic}_add_return(i, v) < 0;
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554
=======
arch_${atomic}_add_negative(${int} i, ${atomic}_t *v)
{
	return arch_${atomic}_add_return(i, v) < 0;
>>>>>>> a8fa06cfb065a2e9663fe7ce32162762b5fcef5b
}
EOF
