cat << EOF
/**
<<<<<<< HEAD
 * arch_${atomic}_fetch_add_unless - add unless the number is already a given value
=======
 * ${arch}${atomic}_fetch_add_unless - add unless the number is already a given value
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554
 * @v: pointer of type ${atomic}_t
 * @a: the amount to add to v...
 * @u: ...unless v is equal to u.
 *
 * Atomically adds @a to @v, so long as @v was not already @u.
 * Returns original value of @v
 */
static __always_inline ${int}
<<<<<<< HEAD
arch_${atomic}_fetch_add_unless(${atomic}_t *v, ${int} a, ${int} u)
{
	${int} c = arch_${atomic}_read(v);
=======
${arch}${atomic}_fetch_add_unless(${atomic}_t *v, ${int} a, ${int} u)
{
	${int} c = ${arch}${atomic}_read(v);
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554

	do {
		if (unlikely(c == u))
			break;
<<<<<<< HEAD
	} while (!arch_${atomic}_try_cmpxchg(v, &c, c + a));
=======
	} while (!${arch}${atomic}_try_cmpxchg(v, &c, c + a));
>>>>>>> d5cf6b5674f37a44bbece21e8ef09dbcf9515554

	return c;
}
EOF
